BEGIN_SUBSHADERS
	"Planet_Base.surfshader"
END_SUBSHADERS

BEGIN_PROPERTIES
	[Header(BAKED DETAIL)]
	[Toggle(_BAKEDDETAIL_ON)] _HasBakedDetail ("	Enabled", Float) = 0
	_BakedDetailFadeRange("	Fade Range", Float) = 1000.0
	_BakedDetailScaleR("	Strength R", Range(0,5)) = 1
	_BakedDetailScaleG("	Strength G", Range(0,5)) = 1
	_BakedDetailScaleB("	Strength B", Range(0,5)) = 1
	_BakedDetailScaleA("	Strength A", Range(0,5)) = 1
	[NoScaleOffset][Normal]_BakedDetailMapR("	Normal R", 2D) = "bump" {}
	[NoScaleOffset][Normal]_BakedDetailMapG("	Normal G", 2D) = "bump" {}
	[NoScaleOffset][Normal]_BakedDetailMapB("	Normal B", 2D) = "bump" {}
	[NoScaleOffset][Normal]_BakedDetailMapA("	Normal A", 2D) = "bump" {}
END_PROPERTIES

BEGIN_DEFINES
	#pragma shader_feature_local _ _BAKEDDETAIL_ON
END_DEFINES

BEGIN_CBUFFER
	float _BakedDetailFadeRange;
	float _BakedDetailScaleR;
	float _BakedDetailScaleG;
	float _BakedDetailScaleB;
	float _BakedDetailScaleA;
END_CBUFFER

BEGIN_CODE
	sampler2D _BakedDetailMapR;
	sampler2D _BakedDetailMapG;
	sampler2D _BakedDetailMapB;
	sampler2D _BakedDetailMapA;

	void SurfaceFunction(inout Surface o, inout ShaderData d)
	{
	#if _BAKEDDETAIL_ON
		#if 0%STACKIDX% == 0
		float4 coords     = d.texcoord0 * _BakedDetailTilingAMul;
		float  max_height = _BakedDetailTilingA;
		#elif 0%STACKIDX% == 1
		float4 coords     = d.texcoord1;
		float  max_height = _BakedDetailTilingB;
		#elif 0%STACKIDX% == 2
		float4 coords     = d.texcoord2;
		float  max_height = _BakedDetailTilingC;
		#endif

		coords.x *= 2.0f;

		float polar = d.extraV2F0.x;
		float noise = sample_noise(coords, polar) * 15.0f;
		float fade  = saturate(d.blackboard.worldDistance / _BakedDetailFadeRange);

		coords *= 64.0f;

		#if _DETAIL_R
		ContributeDetail(o, _BakedDetailMapR, coords, polar, max_height, noise, d.blackboard.detailMask.r * _BakedDetailScaleR * fade);
		#endif
		#if _DETAIL_G
		ContributeDetail(o, _BakedDetailMapG, coords, polar, max_height, noise, d.blackboard.detailMask.g * _BakedDetailScaleG * fade);
		#endif
		#if _DETAIL_B
		ContributeDetail(o, _BakedDetailMapB, coords, polar, max_height, noise, d.blackboard.detailMask.b * _BakedDetailScaleB * fade);
		#endif
		#if _DETAIL_A
		ContributeDetail(o, _BakedDetailMapA, coords, polar, max_height, noise, d.blackboard.detailMask.a * _BakedDetailScaleA * fade);
		#endif
	#endif
	}
END_CODE